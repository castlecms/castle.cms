<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:five="http://namespaces.zope.org/five"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:plone="http://namespaces.plone.org/plone"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    xmlns:monkey="http://namespaces.plone.org/monkey"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:z3c="http://namespaces.zope.org/z3c"
    i18n_domain="castle.cms">

  <!-- plone.schemaeditor wiring and field definition -->
  <utility
    name="castle.cms.easyform.field.QueryChoice"
    component=".field.QueryChoiceFactory"
    />
  <adapter factory=".field.getQueryChoiceFieldSchema" />
  <adapter factory=".field.TextLineQueryChoiceField"
           provides=".field.IQueryChoiceFieldSchema" />
  <!-- z3c.form terms translation -->
  <adapter factory=".terms.QueryChoiceTerms" />

  <!-- supermodel integration to be able to (de)?serialize field -->
  <utility
    component=".supermodel.QueryChoiceImportExportHandler"
    name="castle.cms.easyform.field.QueryChoice"
    />

  <!-- Castle specific override for choice field -->
  <utility
    name="castle.cms.easyform.field.CastleChoice"
    component=".field.CastleChoiceFactory"
    />
  <adapter factory=".field.getCastleChoiceFieldSchema" />
  <adapter factory=".field.TextLineCastleChoiceField"
           provides=".field.ICastleChoiceFieldSchema" />
  <!-- z3c.form terms translation -->
  <adapter factory=".terms.CastleChoiceTerms" />

  <!-- supermodel integration to be able to (de)?serialize field -->
  <utility
    component=".supermodel.CastleChoiceImportExportHandler"
    name="castle.cms.easyform.field.CastleChoice"
    />

  <!--
  Tweak toolbar so when you're on fields, you can click the "View Page" button
  and go back
  -->
  <utility
    component=".toolbar.ToolbarModifier"
    provides="castle.cms.interfaces.IToolbarModifier"
    name='castle.cms.easyformfixes'
    />

</configure>
